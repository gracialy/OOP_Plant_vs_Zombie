/*
 * This source file was generated by the Gradle 'init' task
 */
package pvz;

import java.util.Iterator;

import pvz.map.Map;
import pvz.map.Tile;
// import pvz.main.ZombiesList;
import pvz.plant.*;
import pvz.plantfactory.*;
import pvz.zombie.*;

public class AppMap {
    public static void banner() {
        System.out.println("Welcome to Michael vs. Lalapan!");
    }

    public static void main(String[] args) {
        banner();
        int currentTime = 0;
        Map map = new Map();
        PlantFactory ChomperFactory = new WallnutFactory();
        Plant peashooter = ChomperFactory.createPlant(-10, 500);
        Zombie normalZombie = new NormalZombie(currentTime);

        map.setPlant(1, 5, peashooter);
        map.zombie(1, 5, normalZombie);
        System.out.println("Kondisi awal peta:");
        map.displayMap();
        while (!(peashooter.getHealth() <= 0) && currentTime < 20) {
            for (int i = 0; i < Map.ROWS; i++) {
                for (int j = 0; j < Map.COLS; j++) {
                    Tile posisi = map.getTile(i, j);
                    synchronized (posisi) {
                        Plant plant = posisi.getPlant();
                        if (plant != null && !posisi.getZombies().isEmpty()) {
                            Iterator<Zombie> zombieIterator = posisi.getZombies().iterator();
                            while (zombieIterator.hasNext()) {
                                Zombie zombie = zombieIterator.next();
                                if (zombie.isAttackTime(currentTime)) {
                                    System.out.println("Zombie menyerang");
                                    plant.takeDamage(zombie.getAttackDamage());
                                    zombie.setLastAttackTime(currentTime);
                                    if (plant.getHealth() <= 0) {
                                        posisi.removePlant();
                                        break;
                                    }
                                }
                            }
                        }
                    }
                }
            }
            currentTime += 1;
            System.out.println("Current time: " + currentTime);
            System.out.println("Peashooter health: " + peashooter.getHealth());
        }
        System.out.println("Game Over!");
    }
}